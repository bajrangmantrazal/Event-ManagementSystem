<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Cancellation_Email</name>
        <label>Send Cancellation Email</label>
        <locationX>264</locationX>
        <locationY>539</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Loop_Through_Volunteer_Events</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Loop_Through_Volunteer_Events.Volunteer__r.Email__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Send Cancellation Email of event.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Email_Body</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ccRecipientAddressList</name>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <description>Event Cancellation Notification</description>
    <environments>Default</environments>
    <formulas>
        <name>CurrentVolunteerEmail_CommaSeparated</name>
        <dataType>String</dataType>
        <expression>IF(ISBLANK({!VolunteersEmails}), {!Loop_Through_Volunteer_Events.Volunteer__r.Email__c}, &apos;, &apos;+{!Loop_Through_Volunteer_Events.Volunteer__r.Email__c})</expression>
    </formulas>
    <interviewLabel>Event Cancellation Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Event Cancellation Notification</label>
    <loops>
        <name>Loop_Through_Volunteer_Events</name>
        <label>Loop Through Volunteer Events</label>
        <locationX>176</locationX>
        <locationY>431</locationY>
        <collectionReference>Get_Volunteer_Event</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Send_Cancellation_Email</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Volunteer_Event</name>
        <label>Get Volunteer Event</label>
        <locationX>176</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Through_Volunteer_Events</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Volunteer_Event__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Volunteer_Event</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </filters>
        <object>Event__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>Email_Body</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Hi,&lt;/p&gt;&lt;p&gt;Event- {!$Record.Name} has been canceled.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>Test</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VolunteersEmails</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
